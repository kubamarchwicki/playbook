- name: Install ui-stuff tools
  become: yes
  apt:
    state: latest
    name:
    - firefox
    - chromium-browser
    - nautilus

- name: Install simplenote
  block: 
  - name: Verify if simplenote Is Installed
    stat:
      path: "/usr/bin/simplenote"
    register: "simplenote_installed"
  - name: Get the latest version of simplenote
    shell: curl -s https://api.github.com/repos/Automattic/simplenote-electron/releases/latest | grep 'tag_name' | cut -d\" -f4 | cut -c 2-
    args:
      warn: False
    register: latest_simplenote_version
    changed_when: false
  - name: Install simplenote
    apt:
      deb: https://github.com/Automattic/simplenote-electron/releases/download/v{{ latest_simplenote_version.stdout }}/Simplenote-linux-{{ latest_simplenote_version.stdout }}-amd64.deb
    become: yes
    when: not simplenote_installed.stat.exists

- name: Install Signal
  block:
  - name: "Signal: add GPG key"
    apt_key:
      url: https://updates.signal.org/desktop/apt/keys.asc
    become: yes
  - name: "Signal: add APT repository"
    apt_repository:
      repo: deb [arch=amd64] https://updates.signal.org/desktop/apt xenial main
    become: yes
  - name: "Signal: install package"
    apt:
      name: ['signal-desktop']
      state: latest
    become: yes

- name: Install OBS Studio
  block:
  - name: "OBS: add APT repository"
    apt_repository:
      repo: ppa:obsproject/obs-studio
    become: yes
  - name: "OBS: install obs-studio"
    apt:
      name: ['obs-studio']
      state: latest
    become: yes

# pulseaudio-dlna
# sudo apt-add-repository ppa:qos/pulseaudio-dlna
# sudo apt-get update
# sudo apt-get install pulseaudio-dlna
# https://github.com/masmu/pulseaudio-dlna

- name: Install dropbox
  block:
  - name: "Dropbox: verify if installed"
    stat:
      path: "~/.dropbox-dist/dropboxd"
    register: "dropbox_installed"  
  - name: "Dropbox: install package"
    shell: cd ~ && wget -O - "https://www.dropbox.com/download?plat=lnx.x86_64" | tar xzf -
    args:
      warn: False    
    when: not dropbox_installed.stat.exists

- name: Install slack
  block: 
  - name: "Slack: verify if Installed"
    stat:
      path: "/usr/bin/slack"
    register: "slack_installed"
  
  - name: "Slack: install package"
    apt:
      deb: https://downloads.slack-edge.com/linux_releases/slack-desktop-4.12.2-amd64.deb
    become: yes
    when: not slack_installed.stat.exists

- name: Install Inconsolata font
  block:
  - name: "Inconsolata: get the latest version"
    shell: curl -s https://api.github.com/repos/googlefonts/Inconsolata/releases/latest | grep 'tag_name' | cut -d\" -f4
    args:
      warn: False
    register: latest_inconsolata_version
    changed_when: false
  - name: "Inconsolata: create ~/.fonts/ subdirectory"
    file:
      path: ~/.fonts/Inconsolata
      state: directory    
  - name: "Inconsolata: copy font"
    unarchive:
      src: https://github.com/googlefonts/Inconsolata/releases/download/{{ latest_inconsolata_version.stdout }}/fonts_ttf.zip
      dest: ~/.fonts/Inconsolata      
      remote_src: yes

  - name: Install Firacode font
    block:
    - name: Create ~/.fonts/FiraCode directory
      file:
        path: ~/.fonts/FiraCode
        state: directory    
    - name: "Firacode: Create a temporary directory "
      tempfile:
        state: directory
      changed_when: False
      register: font_dowload_tempdir
    - name: "Firacode: get the latest version"
      shell: curl -s https://api.github.com/repos/tonsky/FiraCode/releases/latest | grep 'tag_name' | cut -d\" -f4
      args:
        warn: False
      register: latest_firacode_version 
      changed_when: false
    - name: "FiraCode: download the font archive to the temporary directory"
      get_url:
        url: https://github.com/tonsky/FiraCode/releases/download/{{ latest_firacode_version.stdout }}/Fira_Code_v{{ latest_firacode_version.stdout }}.zip
        dest: '{{ font_dowload_tempdir.path }}/firacode.zip'
      changed_when: False
    - name: "FiraCode: install font"
      shell: 'unzip -jo "{{ font_dowload_tempdir.path }}/firacode.zip" ttf/* -d ~/.fonts/FiraCode'
      args:
        warn: no
    always:
      - name: "FiraCode: clean up the temporary download directory"
        file:
          path: '{{ font_dowload_tempdir.path }}'
          state: absent
        changed_when: False

- name: Install fonts
  shell: fc-cache -fv
