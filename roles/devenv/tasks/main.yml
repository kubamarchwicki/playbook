- name: "Install generic dev tools"
  apt: 
    name: 
    - direnv
    - code
    - awscli
    state: latest
  become: yes
  ## configure vscode settings sync afterwards https://itnext.io/settings-sync-with-vs-code-c3d4f126989

- name: "Install kubectl"
  block:
  - name: "kubectl: add Google Cloud public key"
    apt_key: 
      url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
      keyring: /etc/apt/trusted.gpg.d/cloud.google.gpg
    become: yes

  - name: "kubectl: add APT repository"
    apt_repository:
      repo: deb [signed-by=/etc/apt/trusted.gpg.d/cloud.google.gpg] https://apt.kubernetes.io/ kubernetes-xenial main
    become: yes

  - name: "kubectl: install"
    apt:
      name: ['apt-transport-https', 'kubectl']
      state: latest
    become: yes

- name: "Install helm"
  block:
  - name: "helm: add public key"
    apt_key: 
      url: https://baltocdn.com/helm/signing.asc
    become: yes

  - name: "helm: add APT repository"
    apt_repository:
      repo: deb https://baltocdn.com/helm/stable/debian/ all main
    become: yes

  - name: "helm: install"
    apt:
      name: ['apt-transport-https', 'helm']
      state: latest
    become: yes


- name: "Install gcloud"
  block:
  - name: "gcloud: add Google Cloud public key"
    apt_key: 
      url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
      keyring: /etc/apt/trusted.gpg.d/cloud.google.gpg
    become: yes

  - name: "gcloud: add APT repository"
    apt_repository:
      repo: deb [signed-by=/etc/apt/trusted.gpg.d/cloud.google.gpg] https://packages.cloud.google.com/apt cloud-sdk main
    become: yes

  - name: "gcloud: install sdk"
    apt:
      name: ['apt-transport-https', 'ca-certificates', 'gnupg', 'google-cloud-sdk']
      state: latest
    become: yes

- name: Install SDKMAN
  block:
  - name: "sdkman: verify if SDKMAN Is Installed"
    stat:
      path: "~/.sdkman/"
    register: "sdkman_installed"

  - name: "sdkman: install"
    shell: 'curl -s http://get.sdkman.io | bash'
    args:
      executable: /bin/bash
      warn: no
    when: not sdkman_installed.stat.exists

  - name: "sdkman: add to .zshrc"
    lineinfile:
      dest: ~/.zshrc
      regexp: 'sdkman-init.sh'
      line: '[[ -s "$HOME/.sdkman/bin/sdkman-init.sh" ]] && source "$HOME/.sdkman/bin/sdkman-init.sh"'
      state: present
  - name: "sdkman: link dotfiles"
    file:
      src: "{{ item.src }}"
      dest: "{{ item.dest }}"
      state: link
      force: yes
    loop:
      - { src: "~/dotfiles/sdkman", dest: "~/.sdkman/etc/config"}      

- name: "Install git delta"
  block:
  - name: Get the local version of git delta
    shell: delta -V | cut -d" " -f2
    ignore_errors: yes
    args:
      warn: False
    register: local_git_delta_version
    changed_when: false

  - name: Get the latest version of git delta
    shell: curl -s https://api.github.com/repos/dandavison/delta/releases/latest | grep 'tag_name' | cut -d\" -f4
    args:
      warn: False
    register: latest_git_delta_version
    changed_when: false

  - name: Install Git Delta {{ latest_git_delta_version.stdout }}
    apt:
      deb: https://github.com/dandavison/delta/releases/download/{{ latest_git_delta_version.stdout }}/git-delta_{{ latest_git_delta_version.stdout }}_amd64.deb
    become: yes
    when: local_git_delta_version.stdout != latest_git_delta_version.stdout

  - name: Setup git delta
    git_config:
      name: "{{ item.name }}"
      scope: global
      value: "{{ item.value }}"
    loop:
      - { name: "core.pager", value: "delta" }
      - { name: "interactive.diffFilter", value: "delta --color-only" }
      - { name: "delta.features", value: "side-by-side line-numbers decorations" }
      - { name: "delta.whitespace-error-style", value: "22 reverse" }
      - { name: "delta.decorations.commit-decoration-style", value: "bold yellow box ul" }
      - { name: "delta.decorations.file-style", value: "bold yellow ul" }
      - { name: "delta.decorations.file-decoration-style", value: "none" }

- name: Install VPN packages
  become: yes
  apt:
    state: latest
    name:
    - network-manager-openvpn
    - network-manager-openvpn-gnome

- name: Install Hashicorp Vault
  block: 
  - name: "Vault: add GPG key"
    apt_key:
      url: https://apt.releases.hashicorp.com/gpg
    become: yes

  - name: "Vault: add APT repository"
    apt_repository:
      repo: deb [arch=amd64] https://apt.releases.hashicorp.com {{ansible_distribution_release}} main
    become: yes

  - name: "Vault: install package"
    apt:
      name: 
      - vault
      state: latest
    become: yes
